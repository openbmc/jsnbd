{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "44338781_aa942cdf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "no longer true in the latest patch.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aff3ee6_e944dc9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 17,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "44338781_aa942cdf",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5d28750_98bc16e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "seems like that wouldn\u0027t be enough to be a replacement daemon?\n\nWhich patch in the series needs approved before the series is functionally (user facing wise) equivalent to the old daemon?\n\nI suspect that that series needs to be merged all at once, so we don\u0027t break anything that exists.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 55
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01d8a360_317e9c92",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 28,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "The new service should cover all functionalities of the old one after this patch: https://gerrit.openbmc.org/c/openbmc/jsnbd/+/59599/9.\n\nI agree that all should be merged at once. Once this patch is in decent shape, I\u0027ll start rebasing the remaining ones.",
      "parentUuid": "c5d28750_98bc16e5",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 55
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b9375ed_7c334a1f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Ran out of time.  Partial review below.\n\nI don\u0027t see any code for handling launching this directly to connect to a port:\n\nhttps://github.com/openbmc/bmcweb/blob/b66551019cf3c31186877c30a91ff8622454f342/include/vm_websocket.hpp#L59\n\nam I missing that, or is this not a complete replacement for the existing proxy mode?  What is required such that we can move to this new daemon without breaking anyone?  any changes to bmcweb required?",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7273ad98_51737049",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T21:17:43Z",
      "side": 1,
      "message": "A quick look shows webui-vue is still using /vm/0/0\n\nhttps://github.com/openbmc/webui-vue/blob/1b417cd406ce65401dcb8d695fe5424287092cb1/src/store/modules/Operations/VirtualMediaStore.js#L42\n\nIf I\u0027m not mistaken, /vm/0/0 is compatible with /nbd/0, the only difference would be in URL, right?  Could we just register /vm/0/0 in the nbd-proxy handler AS WELL as /nbd/0, and would that keep compatibility for users of the existing url?",
      "parentUuid": "7b9375ed_7c334a1f",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a9732de_8d4dfd27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-10T02:10:17Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/69333",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90289b45_ea608e1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-10T02:11:20Z",
      "side": 1,
      "message": "Preemptively assuming this would work, I started this.",
      "parentUuid": "7273ad98_51737049",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20a58c7c_c3714035",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Thank You, we\u0027ll take a look on it.\n\nRegarding WebUI, I think it all comes to a `VUE_APP_VIRTUAL_MEDIA_LIST_ENABLED` knob (https://github.com/openbmc/webui-vue/blob/1b417cd406ce65401dcb8d695fe5424287092cb1/.env.intel#L8). If false, only /vm/0/0 will be used, otherwise, its OEM-dependent, in this case this will be /nbd/x.",
      "parentUuid": "90289b45_ea608e1d",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6e8316c_de7679d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "So, as written, if we move to this, everyones implementations break?  Why did this change the url?",
      "parentUuid": "20a58c7c_c3714035",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "941c8be5_e20defbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-14T15:06:56Z",
      "side": 1,
      "message": "That\u0027s definitely not our intention to break anyone\u0027s existing implementation. Studying deeper into VirtualMediaStore.js and how the flag works:\n- if false, only `/vm/0/0` endpoint will be created (https://github.com/openbmc/webui-vue/blob/master/src/store/modules/Operations/VirtualMediaStore.js#L39-L46)\n- otherwise, the list of endpoints will be created. Their names will be based on contents of collection in `/redfish/v1/Managers/bmc/VirtualMedia`, more specifically, from \"WebSocketEndpoint\" value for each item (vue: https://github.com/openbmc/webui-vue/blob/master/src/store/modules/Operations/VirtualMediaStore.js#L63, bmcweb: https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/virtual_media.hpp#L174-L176).\n\nRight now \"WebSocketEndpoint\" value is taken from mount point\u0027s \"EndpointId\" property (https://gerrit.openbmc.org/plugins/gitiles/openbmc/jsnbd/+/202ea82c0f626bed1a84ff7ab042e148c0e354d3/config/config.json#4). So, in order to maintain compatibility with previous service, this would need to be set to \"/vm/0/0\". Furthermore, since config is going to be reduced just to store number of proxy and legacy slots, we could simply hardcode this value into `/vm/0/\u003cstr\u003e`, where \u003cstr\u003e would be an iterator over proxy slot list. I hope this should allow us to maintain compatibility with old service.",
      "parentUuid": "f6e8316c_de7679d4",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "357bdd4b_f90ea6fc",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 5,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Pretty sure we don\u0027t need this now that this is built into the webui?",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 59
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ebf3a09_4533edb9",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 5,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "I agree, this can be removed.",
      "parentUuid": "357bdd4b_f90ea6fc",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 59
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bb3a848_d6425e6a",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Can we call this something other than \"legacy\"?  Calling it legacy seems to be an opinion not shared by DMTF.  If your goal is to get this mode deprecated by Redfish, please start this discussion, otherwise can we call these modes\n\nNBD_PROXY\nand\nDIRECT\n\nI\u0027m open to other options, but the name \"legacy\" implies need to exist anymore.",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37775fde_41e1d75b",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T21:03:09Z",
      "side": 1,
      "message": "\"I\u0027m open to other options, but the name \"legacy\" implies the mode doesn\u0027t need to exist anymore.\"",
      "parentUuid": "0bb3a848_d6425e6a",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00a2a7b2_9d8f7f7e",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 19,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "How about \"Standard\"? \"Direct\" doesn\u0027t exactly match how it works, because established connection is not direct at all. We\u0027re specifying remote location of image to be served in accordance with Redfish schema (https://redfish.dmtf.org/schemas/v1/VirtualMedia.v1_6_3.json).",
      "parentUuid": "37775fde_41e1d75b",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91320330_d7854716",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "\u003e How about \"Standard\"? \"Direct\" doesn\u0027t exactly match how it works, because established connection is not direct at all. \n\n\"Standard\" implies that there\u0027s a standard it\u0027s meeting up to.  It\u0027s better than legacy, but not terribly descriptive.  Seems reasonable.\n\nDirect was meant to describe virtual_mediad -\u003e File share, instead of virtual_mediad -\u003e bmcweb -\u003e file share, but I could see how that would be confusing.\n\n\u003e We\u0027re specifying remote location of image to be served in accordance with Redfish schema (https://redfish.dmtf.org/schemas/v1/VirtualMedia.v1_6_3.json).",
      "parentUuid": "00a2a7b2_9d8f7f7e",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6cd4d4a_88e65584",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "is it possible to fix the word wrapping on this.  It clearly goes over our limit.\n\nI suspect this could just be made a normal markdown list, rather than a table.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 22,
        "endChar": 175
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86996379_1a4c8cd0",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Will change this to bullet list",
      "parentUuid": "d6cd4d4a_88e65584",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 22,
        "endChar": 175
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8e6f770_71d2195e",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "nit, this daemon doesn\u0027t expose the redfish schema, bmcweb does.  Also, can you list which schemas?",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 24
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45a31936_6fb56391",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-12T21:18:07Z",
      "side": 1,
      "message": "Acually, on second thought, don\u0027t mention which schemas.  The exact schemas should go in Redfish.md in bmcweb.",
      "parentUuid": "e8e6f770_71d2195e",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 24
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0e75c1f_6031b6e7",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "45a31936_6fb56391",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 24
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5602d841_125fe6bf",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Again, THIS daemon doesn\u0027t expose a websocket, bmcweb does.",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a376e5e_f1d47653",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5602d841_125fe6bf",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "275aa33a_5ba4b745",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "What does this mean?  This daemon doesn\u0027t have anything to do with authentication?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 77
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95c50f4e_4beee076",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 35,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Will remove",
      "parentUuid": "275aa33a_5ba4b745",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 77
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46ca602c_c09cb0e3",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 71,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Remove.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 71,
        "endChar": 0
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "762c744b_bd56f874",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 71,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "46ca602c_c09cb0e3",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 71,
        "endChar": 0
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584161f3_8d943932",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 78,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "what is \"systemd devel\" ?\n\nlibsystemd?  I don\u0027t think that\u0027s used directly here, only through sdbusplus.  No need to call out systemds dependencies.",
      "range": {
        "startLine": 78,
        "startChar": 10,
        "endLine": 78,
        "endChar": 15
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88b89a12_8cb8eab0",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 78,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "I think final name should be \"libsystemd-devel\". Description is wrong though, as we\u0027re using it for udev API, not DBus. Will correct.",
      "parentUuid": "584161f3_8d943932",
      "range": {
        "startLine": 78,
        "startChar": 10,
        "endLine": 78,
        "endChar": 15
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34010c3c_6a5bd482",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 78,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "I think the package is \"libsystemd-dev\", but even libsystemd-devel is more descriptive.",
      "parentUuid": "88b89a12_8cb8eab0",
      "range": {
        "startLine": 78,
        "startChar": 10,
        "endLine": 78,
        "endChar": 15
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc3c9a98_4ead9273",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 99,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Are going to result in a folder structure of jsondb/build/build, which I\u0027m almost certain isn\u0027t intended.  It just looks like they were copied from the instructions.  I suspect they can be just removed, but if you want to keep them, the instructions would be\n\n```\nmeson build\nmeson compile -C build\n```\n\n(please double check these work, I just typed them out from memory)",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c06a5fd_eb92f405",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 99,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T21:03:09Z",
      "side": 1,
      "message": "\"These are going to result...\"",
      "parentUuid": "cc3c9a98_4ead9273",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c67970cb_19a3ed2a",
        "filename": "README.md",
        "patchSetId": 24
      },
      "lineNbr": 99,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Ack. Some weird mixup must have happened after switching from CMake. Will correct that.",
      "parentUuid": "8c06a5fd_eb92f405",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae4f0826_1768100a",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "We\u0027re waiting on compiler support for c++23 + sdbusplus.",
      "range": {
        "startLine": 7,
        "startChar": 20,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "738d12e6_23db706a",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Ack. Most probably it\u0027ll be resolved by the time this series is ready to merge.",
      "parentUuid": "ae4f0826_1768100a",
      "range": {
        "startLine": 7,
        "startChar": 20,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df4d396a_c8c56b01",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "Hard to say, but just be aware of it.",
      "parentUuid": "738d12e6_23db706a",
      "range": {
        "startLine": 7,
        "startChar": 20,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63436280_5e52dc40",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "I think all of this can go away?",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 118,
        "endChar": 5
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5c61ab5_e0cf8cef",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 118,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "63436280_5e52dc40",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 118,
        "endChar": 5
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea9805a_b8d0be02",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 140,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "like we talked about, remove.",
      "range": {
        "startLine": 140,
        "startChar": 15,
        "endLine": 140,
        "endChar": 24
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c9f0c25_1c4ff905",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 140,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "cea9805a_b8d0be02",
      "range": {
        "startLine": 140,
        "startChar": 15,
        "endLine": 140,
        "endChar": 24
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a25f816a_fdd6daf9",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 150,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "This was copied from bmcweb.  I\u0027m fairly certain this doesn\u0027t use beast (the http encoding library).  Please put some thought into this.  Remove all the dependencies, and add them back one at a time as needed.",
      "range": {
        "startLine": 150,
        "startChar": 40,
        "endLine": 150,
        "endChar": 70
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e7e5505_3ea57f49",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 150,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "- beast is needed for file_posix object.\n- callable_traits is needed by sdbusplus::asio.\n- process is used in later patches. Will remove this for now.",
      "parentUuid": "a25f816a_fdd6daf9",
      "range": {
        "startLine": 150,
        "startChar": 40,
        "endLine": 150,
        "endChar": 70
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12d47b76_9542253d",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 150,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "1e7e5505_3ea57f49",
      "range": {
        "startLine": 150,
        "startChar": 40,
        "endLine": 150,
        "endChar": 70
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a33d001_de77f5b4",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "This doesn\u0027t use phosphor-logging (it invents its own logger).  Why is it added as a dependency?",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 197,
        "endChar": 46
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1943dd2e_bc5fad38",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 197,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Logger serves as a wrapper for phosphor::logging::log: https://gerrit.openbmc.org/plugins/gitiles/openbmc/jsnbd/+/202ea82c0f626bed1a84ff7ab042e148c0e354d3/src/utils/log-wrapper.hpp#58",
      "parentUuid": "0a33d001_de77f5b4",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 197,
        "endChar": 46
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c619c77_e2194daf",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "Wait, if you\u0027re using phosphor-logging, why put anything in Logging.hpp at all?",
      "parentUuid": "1943dd2e_bc5fad38",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 197,
        "endChar": 46
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c8a5025_273b92b6",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 197,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-14T15:06:56Z",
      "side": 1,
      "message": "I think switch to phosphor-logging was made to address these comments:\nhttps://gerrit.openbmc.org/c/openbmc/jsnbd/+/49944/1..24/src/logger.hpp#b1\nhttps://gerrit.openbmc.org/c/openbmc/jsnbd/+/49944/3..24/src/logger.hpp#b77\n\nFunctions from log-wrapper.hpp provide more convenient way to log than direct calls of phosphor::logging::log. Is that approach acceptable or would You rather expect to call the function from phosphor-logging directly in our code, without any wrapping?\n\nOne thing I\u0027ve noticed now is that we\u0027re using **log** instead of **lg2**, as Patrick suggested back then. Is that OK, or would You like to change it as well?",
      "parentUuid": "8c619c77_e2194daf",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 197,
        "endChar": 46
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "435ca9e4_316a25e8",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 222,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "I don\u0027t think we have to explicitly set this.  The defaults should work now?",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 222,
        "endChar": 62
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d63fcf80_2790583c",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 222,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Default install directory is set to /usr/bin, so unfortunately we need to point this explicitly.",
      "parentUuid": "435ca9e4_316a25e8",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 222,
        "endChar": 62
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97525838_b84d2382",
        "filename": "meson.build",
        "patchSetId": 24
      },
      "lineNbr": 222,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "ACK.",
      "parentUuid": "d63fcf80_2790583c",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 222,
        "endChar": 62
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10dbc6c3_e7f85a11",
        "filename": "meson_options.txt",
        "patchSetId": 24
      },
      "lineNbr": 2,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "unmatched brace.\n\nAlso, can we get some better description of \"legacy\" mode?  Presumably all uses of virtual media will be through HTTPS in bmcweb, so getting a better description of what disabling this disallows would be good.  Is it related to either of the two bmcweb options?",
      "range": {
        "startLine": 2,
        "startChar": 89,
        "endLine": 2,
        "endChar": 91
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4cf2c42_11331be9",
        "filename": "meson_options.txt",
        "patchSetId": 24
      },
      "lineNbr": 2,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T21:03:09Z",
      "side": 1,
      "message": "nvm for the second, legacy mode is described in the readme.\n\nWhat does need to go here is why someone would want to set this option?  Presumably we don\u0027t need support for this in BOTH the config file and compile time?  Unless there\u0027s a significant advantage in binary size to not having legacy mode?",
      "parentUuid": "10dbc6c3_e7f85a11",
      "range": {
        "startLine": 2,
        "startChar": 89,
        "endLine": 2,
        "endChar": 91
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e53a842_7baf8ea3",
        "filename": "meson_options.txt",
        "patchSetId": 24
      },
      "lineNbr": 2,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Initial design assumed legacy mode to be an extension for existing nbd-proxy mode. Nowadays I think that both could be available without the need to disable it in compile time. I\u0027ll compare binary sizes in our downstream implementation with and without that option. If there\u0027s no significant difference, I\u0027ll remove it.\nBesides, I think that this will be handled anyway by \"LegacyMountPoints\" value in config. One could simply set it to 0 in case of not wanting support for legacy mode.",
      "parentUuid": "e4cf2c42_11331be9",
      "range": {
        "startLine": 2,
        "startChar": 89,
        "endLine": 2,
        "endChar": 91
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57dae8a7_73783b11",
        "filename": "meson_options.txt",
        "patchSetId": 24
      },
      "lineNbr": 2,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "\u003e Initial design assumed legacy mode to be an extension for existing nbd-proxy mode. Nowadays I think that both could be available without the need to disable it in compile time. I\u0027ll compare binary sizes in our downstream implementation with and without that option. If there\u0027s no significant difference, I\u0027ll remove it.\n\nSounds good.\n\n\u003e Besides, I think that this will be handled anyway by \"LegacyMountPoints\" value in config. One could simply set it to 0 in case of not wanting support for legacy mode.\n\nYep, that\u0027s kinda what I meant by supporting it in both.",
      "parentUuid": "0e53a842_7baf8ea3",
      "range": {
        "startLine": 2,
        "startChar": 89,
        "endLine": 2,
        "endChar": 91
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3687ebb_5c2c9285",
        "filename": "meson_options.txt",
        "patchSetId": 24
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "Please format this so it\u0027s readable.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 3,
        "endChar": 118
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c331129_2aa20c85",
        "filename": "meson_options.txt",
        "patchSetId": 24
      },
      "lineNbr": 3,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a3687ebb_5c2c9285",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 3,
        "endChar": 118
      },
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0d8708d_d2ad0cfc",
        "filename": "src/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T20:58:53Z",
      "side": 1,
      "message": "I don\u0027t see any code for handling launching this directly to connect to a port:\n\nhttps://github.com/openbmc/bmcweb/blob/b66551019cf3c31186877c30a91ff8622454f342/include/vm_websocket.hpp#L59\n\nam I missing that, or is this not a complete replacement for the existing proxy mode?  What is required such that we can move to this new daemon without breaking anyone?  Changes to bmcweb requried?",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b55a94ba_1e1ec4f2",
        "filename": "src/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 36,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2024-02-13T14:48:35Z",
      "side": 1,
      "message": "As mentioned in other comment, this is implemented in another patch.",
      "parentUuid": "d0d8708d_d2ad0cfc",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97463628_3ee09be0",
        "filename": "src/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-13T18:30:00Z",
      "side": 1,
      "message": "Closing this out, we can follow up on the other comment.",
      "parentUuid": "b55a94ba_1e1ec4f2",
      "revId": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}