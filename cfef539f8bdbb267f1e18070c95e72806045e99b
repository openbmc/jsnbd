{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "79d91c84_ea8be01a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-01-11T03:08:16Z",
      "side": 1,
      "message": "I\u0027m more on the kernel interface side of things here, I\u0027ll leave the service implementation reviews to others.\n\nLooks decent, and nice work on the change to meson. A couple of comments inline, mostly around the configuration structure. Like some of the other reviews, +1 on the structure of having most of the configuration can be fixed, and we can store any dynamic configuration in existing infrastructure.\n\nOne overall thing though: you make several mentions to \"mount point\" in this (and subsequent) changes; this term has a specific meaning of where a device is attached to the local filesystem.\n\nHowever, I assume you\u0027re not actually \"mounting\" these devices into the BMC filesystem - is that correct? Could we clarify this a bit in the code?",
      "revId": "cfef539f8bdbb267f1e18070c95e72806045e99b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee5fbd7a_2f17714e",
        "filename": "config/config.json",
        "patchSetId": 2
      },
      "lineNbr": 4,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-01-11T03:08:16Z",
      "side": 1,
      "message": "What\u0027s the definition of a \"slot\" here? Could this just be an index?\n\nAnd if so, most of the keys (EndPointId, NBDDevice, UnixSocket) seem to be derived from that index, so you could imply those values rather than requiring mostly boilerplate config values.",
      "revId": "cfef539f8bdbb267f1e18070c95e72806045e99b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dc271fe_421c91e7",
        "filename": "config/config.json",
        "patchSetId": 2
      },
      "lineNbr": 4,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2022-01-14T14:27:50Z",
      "side": 1,
      "message": "This is propagated as name to dbus/rf/UI interface. There are four possible slots with USB Gadget, each one can have specific name.",
      "parentUuid": "ee5fbd7a_2f17714e",
      "revId": "cfef539f8bdbb267f1e18070c95e72806045e99b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cc83ab6_f63c28c5",
        "filename": "src/system.hpp",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-01-11T03:08:16Z",
      "side": 1,
      "message": "Why does this need to be one of the fixed nbd names from nameMatching? Is there any issue with allowing arbitrary paths here?\n\nOr, given you\u0027re requiring the \u0027nbd\u0027 prefix in call cases, just make this an index instead?",
      "revId": "cfef539f8bdbb267f1e18070c95e72806045e99b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9e5c98e_a205c697",
        "filename": "src/system.hpp",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2022-01-14T14:27:50Z",
      "side": 1,
      "message": "I have changed it, as previously enum was internal representation for this class. \nThis class may do more in the future as I wrote in this comment:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/jsnbd/+/49944/comment/f4ece81e_e25bd73b/",
      "parentUuid": "1cc83ab6_f63c28c5",
      "revId": "cfef539f8bdbb267f1e18070c95e72806045e99b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdf7731f_d836f01e",
        "filename": "src/system.hpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-01-11T03:08:16Z",
      "side": 1,
      "message": "It looks like you\u0027re just checking whether the device node exists, is that correct? if so, an `access()` would work, or a `stat()` if you want to check that it\u0027s a proper nbd device (chardev, with major NBD_MAJOR).\n\nIs there a reason this needs to be an O_EXCL, but the main open() below does not?",
      "revId": "cfef539f8bdbb267f1e18070c95e72806045e99b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}