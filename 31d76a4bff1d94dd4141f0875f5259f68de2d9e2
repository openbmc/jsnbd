{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "84e3fe9f_63f10ac6",
        "filename": ".clang-tidy-ignore",
        "patchSetId": 22
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Why are we ignoring these files?",
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3106635_14638d60",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "These aren\u0027t required for meson anymore.  meson supports lto directly.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 5
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "363f4182_78f66b3e",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 132,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "These are now set in yocto.  No need to set them here.",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67d6ada8_06983138",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 149,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "I see no uses of coroutine in this patch?",
      "range": {
        "startLine": 149,
        "startChar": 39,
        "endLine": 149,
        "endChar": 48
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f20f7c5_60ce193e",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 158,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "are you sure you want this?",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 158,
        "endChar": 50
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f547ad00_411864de",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 189,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "when configured this triggers warnings:\n\nmeson.build:180: WARNING: Project targets \u0027\u003e\u003d1.1.1\u0027 but uses feature deprecated since \u00270.64.0\u0027: copy arg in configure_file. Use fs.copyfile instead\n\nthis is fixed in one of my patches.  Feel free to squash it in.",
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "051989d4_a2098270",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "What are we using tempfiles.d for?  Do we do that anywhere else?",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 197,
        "endChar": 0
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "841f8c36_a672190d",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 205,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "very strange indentation here.   PTAL.",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 205,
        "endChar": 16
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfede329_2fdb397c",
        "filename": "meson.build",
        "patchSetId": 22
      },
      "lineNbr": 218,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "You don\u0027t need get supported arguments here.  -D is just ignored, as it\u0027s supported on all compilers.  Ideally you\u0027d use add_project_arguments, but I realize the example you copied from doesn\u0027t have that.",
      "range": {
        "startLine": 218,
        "startChar": 8,
        "endLine": 218,
        "endChar": 36
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fd26aaa_3dcae708",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "This is only used in one spot, should it be declared there?  I can\u0027t think of any reason for this to be configurable.",
      "range": {
        "startLine": 32,
        "startChar": 28,
        "endLine": 32,
        "endChar": 40
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "758be753_ea9c4cb6",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "shouldn\u0027t this be initted to defaultTimeout?",
      "range": {
        "startLine": 41,
        "startChar": 27,
        "endLine": 41,
        "endChar": 34
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0bb0fee_efafdabf",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "This function doesn\u0027t look used.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 68
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b16d6cc_8772ca39",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 54,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Probably want to return a reference here?  Or just return a pointer with nullptr meaning not found.  No sense in doing both a pointer and optional",
      "range": {
        "startLine": 54,
        "startChar": 34,
        "endLine": 54,
        "endChar": 35
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da850b0e_3ee21f81",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Given you have a non stream based file abstraction, should we use that instead of ifstream?",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 39
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7377252_700f6192",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 85,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "nit, declare the type here, otherwise people not familiar with the parse() function won\u0027t know what the variable type is.\n\n\nNon nit, by default this function throws, if you plan on handling the error immediately, you might want to set the third argument of parse() to false, then check for is_discarded()",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 85,
        "endChar": 16
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49df6de4_eabf52e9",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 102,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "nit, inverting this check would make the code clearer by handling errors early, and save you an indent.",
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f1e190c_1afbb4ee",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 125,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "This doesn\u0027t need to be explicitly constructed it\u0027s already two args.",
      "range": {
        "startLine": 125,
        "startChar": 35,
        "endLine": 125,
        "endChar": 51
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95beb962_cf097b51",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 125,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T17:53:01Z",
      "side": 1,
      "message": "Sorry, \"it\u0027s already two args.\" was meant for another line.",
      "parentUuid": "5f1e190c_1afbb4ee",
      "range": {
        "startLine": 125,
        "startChar": 35,
        "endLine": 125,
        "endChar": 51
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d2bb31_e70bf92c",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 131,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "this has the potential to have the nbddevice partially constructed if any of the other checks fail.  Should this be done at line 207?",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 131,
        "endChar": 56
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59602abe_2fc5ec75",
        "filename": "src/configuration.hpp",
        "patchSetId": 22
      },
      "lineNbr": 188,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Shoudn\u0027t these be represented as strings?  Something like\n\nMode: \"proxy\"",
      "range": {
        "startLine": 188,
        "startChar": 29,
        "endLine": 188,
        "endChar": 30
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "498002f9_a8a93d15",
        "filename": "src/main.cpp",
        "patchSetId": 22
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "neither of these appear to be used as shared_ptr anywhere.  Can they just be values?",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 20
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fd318ed_0efcb20b",
        "filename": "src/main.cpp",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Wouldn\u0027t this go in /etc/virtual-media, given that it\u0027s a config file?",
      "range": {
        "startLine": 35,
        "startChar": 31,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df5e548c_34948530",
        "filename": "src/main.cpp",
        "patchSetId": 22
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Why?  Presumably we should be setting this on created files at the call site, not setting a umask?  Also, where does this application create files?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 71
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f52cb64_d959a162",
        "filename": "src/main.cpp",
        "patchSetId": 22
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Please don\u0027t ignore error codes.  At least print them to the console.\n\nFYI, you probably want to check for operation_aborted, which will get called on shutdown.",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 66
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa4b2978_14d390d5",
        "filename": "src/system.hpp",
        "patchSetId": 22
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Why are we redefining these?  Shouldn\u0027t these be pulled from nbd.h?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 35
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2306add1_8e37a69b",
        "filename": "src/system.hpp",
        "patchSetId": 22
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Does this need to exist if it needs to be explicit?  Why wouldn\u0027t we just call isValid()?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 55,
        "endChar": 5
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51aa24f2_29479dbd",
        "filename": "src/system.hpp",
        "patchSetId": 22
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "This seems a little extreme to have a lookup table for something that amounts to nbd + index.  I would assume we just want to parse out the slot number?",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 124,
        "endChar": 78
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efc5f6f0_70f1c8b7",
        "filename": "src/system.hpp",
        "patchSetId": 22
      },
      "lineNbr": 127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Why is this here?",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 60
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d35a7bd_8f45018e",
        "filename": "src/utils/log-wrapper.hpp",
        "patchSetId": 22
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "This looks like it was copied from bmcweb.  Please take a look at the current state of bmcweb http/logging.hpp.  It has improved considerably compared to this stream/macro version.\n\nFWIW, the one this copied from originally came from crow, so it didn\u0027t follow the coding standard.  We should avoid duplicating it.",
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d9e36b9_fc875b99",
        "filename": "src/utils/utils.hpp",
        "patchSetId": 22
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Instead of inventing our own file interface, could we use an existing one, like file_posix?  I suggest that one because this repo already has a dependency on boost, but stdplus also has an implementation of basically this same class.  We should avoid creating another, even if it\u0027s pretty lightweight.\n\nhttps://www.boost.org/doc/libs/1_84_0/libs/beast/doc/html/beast/ref/boost__beast__file_posix.html",
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "444004d2_5522cdde",
        "filename": "src/utils/utils.hpp",
        "patchSetId": 22
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "You probably want to just put NOLINTNEXTLINE on the calls you expect to fail, instead of exempting the entire class.",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 18
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6d2fdff_9d64177d",
        "filename": "src/utils/utils.hpp",
        "patchSetId": 22
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "nit This constructor takes two arguments, there\u0027s no need to make it explicit.",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94699fbc_54e9516d",
        "filename": "subprojects/nlohmann.wrap",
        "patchSetId": 22
      },
      "lineNbr": 4,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Please use the version of this from wrapdb instead of writing your own.\n\nhttps://mesonbuild.com/Wrapdb-projects.html",
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c46b996_f69df410",
        "filename": "subprojects/packagefiles/boost/meson.build",
        "patchSetId": 22
      },
      "lineNbr": 8,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Please just use the cmake boost variant like bmcweb does.\n\nIt\u0027s easier, and it doesn\u0027t involve mixing build commands in the configure phase, nor does it involve having to build b2, and passes compiler flags down to the build properly.\n\nhttps://github.com/openbmc/bmcweb/blob/master/subprojects/boost.wrap",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 59
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55ecf5bc_092471af",
        "filename": "subprojects/phosphor-logging.wrap",
        "patchSetId": 22
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "Please don\u0027t pin your dependencies on openbmc hosted projects anymore.  They consistently got out of date.",
      "range": {
        "startLine": 3,
        "startChar": 11,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dda9e137_9825ee86",
        "filename": "subprojects/sdbusplus.wrap",
        "patchSetId": 22
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e2a7168_14d0eb00",
        "filename": "subprojects/sdbusplus.wrap",
        "patchSetId": 22
      },
      "lineNbr": 5,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-05T16:59:59Z",
      "side": 1,
      "message": "This patch isn\u0027t present in the diff, and definitely wouldn\u0027t be accepted as is.  Please submit your patches to sdbusplus directly.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 56
      },
      "revId": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}